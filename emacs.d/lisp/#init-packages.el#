(require 'package)
;(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/"))
;(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
;(add-to-list 'package-archives '("nongnu" . "https://elpa.nongnu.org/nongnu/"))
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
			  ("gnu" . "https://elpa.gnu.org/packages/")
			  ("nongnu" . "https://elpa.nongnu.org/nongnu/")))
;(when (not package-archive-contents)
;  (package-refresh-contents))

(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-and-compile
  (setq use-package-always-ensure t
	use-package-expand-minimally t))

(use-package emacs
  :custom
  (completion--cycle-threshold 3)
  (tab-always-indent 'complete))

(use-package corfu
  :ensure t
  :custom
  (corfu-cycle t)
  (corfu-auto t)
  (corfu-separator ?\s)
  (corfu-quit-at-boundary nil)
  (corfu-quit-no-match nil)
  (corfu-preview-current nil)
  (corfu-preselect 'prompt)
  (corfu-on-exact-match nil)
  :init
  (global-corfu-mode)
  )

(use-package orderless
  :ensure t
  :custom
  (completion-styles '(orderless basic))
  (completion-category-defaults nil)
  (completion-category-overrides '((file (styles partial-completion))))
)

(use-package vertico
  :ensure t
  :init
  (vertico-mode)
  )

(use-package marginalia
  :ensure t
  :bind (:map minibuffer-local-map
	      ("M-A" . marginalia-cycle))
  :init
  (marginalia-mode))

(use-package embark
  :ensure t
  :bind
  (("C-." . embark-act)
   ("C-;" . embark-dwim)
   ("C-h B" . embark-bindings))
  :custom
  (prefix-help-command #'embark-prefix-help-command))

(use-package embark-consult
  :ensure t
  :hook
  (embark-collect-mode . consult-preview-at-point-mode))

(use-package consult :ensure t)
(global-set-key (kbd "C-s") 'consult-line)

(use-package wgrep
  :ensure t
  :custom
  (wgrep-auto-save-buffer t))

(provide 'init-packages)

